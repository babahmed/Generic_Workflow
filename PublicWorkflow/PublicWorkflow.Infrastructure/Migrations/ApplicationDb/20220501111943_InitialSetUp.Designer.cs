// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PublicWorkflow.Infrastructure.DbContexts;

#nullable disable

namespace PublicWorkflow.Infrastructure.Migrations.ApplicationDb
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220501111943_InitialSetUp")]
    partial class InitialSetUp
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("application")
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AspNetCoreHero.EntityFrameworkCore.AuditTrail.Models.Audit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AffectedColumns")
                        .HasColumnType("text")
                        .HasColumnName("affected_columns");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_time");

                    b.Property<string>("NewValues")
                        .HasColumnType("text")
                        .HasColumnName("new_values");

                    b.Property<string>("OldValues")
                        .HasColumnType("text")
                        .HasColumnName("old_values");

                    b.Property<string>("PrimaryKey")
                        .HasColumnType("text")
                        .HasColumnName("primary_key");

                    b.Property<string>("TableName")
                        .HasColumnType("text")
                        .HasColumnName("table_name");

                    b.Property<string>("Type")
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.Property<string>("UserId")
                        .HasColumnType("text")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_audit_logs");

                    b.ToTable("audit_logs", "application");
                });

            modelBuilder.Entity("PublicWorkflow.Domain.Entities.Catalog.Approval", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("Actioned")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("actioned");

                    b.Property<string>("AlreadyActioned")
                        .HasColumnType("text")
                        .HasColumnName("already_actioned");

                    b.Property<string>("AlreadyApproved")
                        .HasColumnType("text")
                        .HasColumnName("already_approved");

                    b.Property<long>("ApprovalconfigId")
                        .HasColumnType("bigint")
                        .HasColumnName("approvalconfig_id");

                    b.Property<string>("Comments")
                        .HasColumnType("text")
                        .HasColumnName("comments");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_on");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_on");

                    b.Property<long>("ProcessId")
                        .HasColumnType("bigint")
                        .HasColumnName("process_id");

                    b.Property<DateTime?>("ReviewStarted")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("review_started");

                    b.Property<int>("ReviewStatus")
                        .HasColumnType("integer")
                        .HasColumnName("review_status");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<bool>("Treated")
                        .HasColumnType("boolean")
                        .HasColumnName("treated");

                    b.HasKey("Id")
                        .HasName("pk_approval");

                    b.HasIndex("ApprovalconfigId")
                        .HasDatabaseName("ix_approval_approvalconfig_id");

                    b.HasIndex("ProcessId")
                        .HasDatabaseName("ix_approval_process_id");

                    b.ToTable("approval", "application");
                });

            modelBuilder.Entity("PublicWorkflow.Domain.Entities.Catalog.ApprovalConfig", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Approvers")
                        .HasColumnType("text")
                        .HasColumnName("approvers");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_on");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_on");

                    b.Property<int>("Level")
                        .HasColumnType("integer")
                        .HasColumnName("level");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<long>("ProcessConfigId")
                        .HasColumnType("bigint")
                        .HasColumnName("process_config_id");

                    b.Property<int>("RequiredApprovers")
                        .HasColumnType("integer")
                        .HasColumnName("required_approvers");

                    b.HasKey("Id")
                        .HasName("pk_approval_config");

                    b.HasIndex("ProcessConfigId")
                        .HasDatabaseName("ix_approval_config_process_config_id");

                    b.ToTable("approval_config", "application");
                });

            modelBuilder.Entity("PublicWorkflow.Domain.Entities.Catalog.ApprovalRule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("Action")
                        .HasColumnType("integer")
                        .HasColumnName("action");

                    b.Property<long>("ApprovalConfigId")
                        .HasColumnType("bigint")
                        .HasColumnName("approval_config_id");

                    b.Property<int>("Condition")
                        .HasColumnType("integer")
                        .HasColumnName("condition");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_on");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_on");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.Property<string[]>("Values")
                        .HasColumnType("text[]")
                        .HasColumnName("values");

                    b.HasKey("Id")
                        .HasName("pk_approval_rule");

                    b.HasIndex("ApprovalConfigId")
                        .HasDatabaseName("ix_approval_rule_approval_config_id");

                    b.ToTable("approval_rule", "application");
                });

            modelBuilder.Entity("PublicWorkflow.Domain.Entities.Catalog.History", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Action")
                        .HasColumnType("text")
                        .HasColumnName("action");

                    b.Property<long?>("ApprovalId")
                        .HasColumnType("bigint")
                        .HasColumnName("approval_id");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_on");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_on");

                    b.Property<long?>("ProcessId")
                        .HasColumnType("bigint")
                        .HasColumnName("process_id");

                    b.Property<string>("Username")
                        .HasColumnType("text")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_history");

                    b.ToTable("history", "application");
                });

            modelBuilder.Entity("PublicWorkflow.Domain.Entities.Catalog.Organization", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Address1")
                        .HasColumnType("text")
                        .HasColumnName("address1");

                    b.Property<string>("Address2")
                        .HasColumnType("text")
                        .HasColumnName("address2");

                    b.Property<string>("City")
                        .HasColumnType("text")
                        .HasColumnName("city");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("text")
                        .HasColumnName("contact_email");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_on");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<string>("LandMark")
                        .HasColumnType("text")
                        .HasColumnName("land_mark");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_on");

                    b.Property<string>("Logo")
                        .HasColumnType("text")
                        .HasColumnName("logo");

                    b.Property<string>("Motto")
                        .HasColumnType("text")
                        .HasColumnName("motto");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .HasColumnType("text")
                        .HasColumnName("phone");

                    b.Property<string>("Province")
                        .HasColumnType("text")
                        .HasColumnName("province");

                    b.HasKey("Id")
                        .HasName("pk_organization");

                    b.ToTable("organization", "application");
                });

            modelBuilder.Entity("PublicWorkflow.Domain.Entities.Catalog.OrganizationUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_on");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_on");

                    b.Property<long?>("OrganizationId")
                        .HasColumnType("bigint")
                        .HasColumnName("organization_id");

                    b.HasKey("Id")
                        .HasName("pk_organization_user");

                    b.HasIndex("OrganizationId")
                        .HasDatabaseName("ix_organization_user_organization_id");

                    b.ToTable("organization_user", "application");
                });

            modelBuilder.Entity("PublicWorkflow.Domain.Entities.Catalog.Process", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Attachements")
                        .HasColumnType("text")
                        .HasColumnName("attachements");

                    b.Property<DateTime?>("Completed")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("completed");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_on");

                    b.Property<string>("Data")
                        .HasColumnType("text")
                        .HasColumnName("data");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("boolean")
                        .HasColumnName("is_published");

                    b.Property<string>("JobReferenceId")
                        .HasColumnType("text")
                        .HasColumnName("job_reference_id");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_on");

                    b.Property<long>("ProcessConfigId")
                        .HasColumnType("bigint")
                        .HasColumnName("process_config_id");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("pk_process");

                    b.HasIndex("ProcessConfigId")
                        .HasDatabaseName("ix_process_process_config_id");

                    b.ToTable("process", "application");
                });

            modelBuilder.Entity("PublicWorkflow.Domain.Entities.Catalog.ProcessConfig", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_on");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("is_enabled");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_on");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<long?>("OrganizationId")
                        .HasColumnType("bigint")
                        .HasColumnName("organization_id");

                    b.Property<bool>("ProcessLevelsConcurrently")
                        .HasColumnType("boolean")
                        .HasColumnName("process_levels_concurrently");

                    b.Property<int>("RequiredApprovalLevels")
                        .HasColumnType("integer")
                        .HasColumnName("required_approval_levels");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_process_config");

                    b.HasIndex("OrganizationId")
                        .HasDatabaseName("ix_process_config_organization_id");

                    b.ToTable("process_config", "application");
                });

            modelBuilder.Entity("PublicWorkflow.Domain.Entities.Catalog.ProcessRequirement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_on");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_on");

                    b.Property<long?>("ProcessConfigId")
                        .HasColumnType("bigint")
                        .HasColumnName("process_config_id");

                    b.Property<int>("Requirement")
                        .HasColumnType("integer")
                        .HasColumnName("requirement");

                    b.HasKey("Id")
                        .HasName("pk_requirement");

                    b.HasIndex("ProcessConfigId")
                        .HasDatabaseName("ix_requirement_process_config_id");

                    b.ToTable("requirement", "application");
                });

            modelBuilder.Entity("PublicWorkflow.Domain.Entities.Catalog.ProcessRule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("Action")
                        .HasColumnType("integer")
                        .HasColumnName("action");

                    b.Property<int>("Condition")
                        .HasColumnType("integer")
                        .HasColumnName("condition");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_on");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_on");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<long>("ProcessConfigId")
                        .HasColumnType("bigint")
                        .HasColumnName("process_config_id");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.Property<string[]>("Values")
                        .HasColumnType("text[]")
                        .HasColumnName("values");

                    b.HasKey("Id")
                        .HasName("pk_process_rule");

                    b.HasIndex("ProcessConfigId")
                        .HasDatabaseName("ix_process_rule_process_config_id");

                    b.ToTable("process_rule", "application");
                });

            modelBuilder.Entity("PublicWorkflow.Domain.Entities.Catalog.ProcessView", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("AlreadyApproved")
                        .HasColumnType("text")
                        .HasColumnName("already_approved");

                    b.Property<string>("Approvers")
                        .HasColumnType("text")
                        .HasColumnName("approvers");

                    b.Property<string>("Attachements")
                        .HasColumnType("text")
                        .HasColumnName("attachements");

                    b.Property<string>("Comments")
                        .HasColumnType("text")
                        .HasColumnName("comments");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_on");

                    b.Property<string>("Data")
                        .HasColumnType("text")
                        .HasColumnName("data");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<string>("JobReferenceId")
                        .HasColumnType("text")
                        .HasColumnName("job_reference_id");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_on");

                    b.Property<int>("Level")
                        .HasColumnType("integer")
                        .HasColumnName("level");

                    b.Property<string>("LevelDescription")
                        .HasColumnType("text")
                        .HasColumnName("level_description");

                    b.Property<string>("LevelName")
                        .HasColumnType("text")
                        .HasColumnName("level_name");

                    b.Property<DateTime?>("Logged")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("logged");

                    b.Property<string>("ProcessDescription")
                        .HasColumnType("text")
                        .HasColumnName("process_description");

                    b.Property<long>("ProcessId")
                        .HasColumnType("bigint")
                        .HasColumnName("process_id");

                    b.Property<string>("ProcessName")
                        .HasColumnType("text")
                        .HasColumnName("process_name");

                    b.Property<int>("ProcessStatus")
                        .HasColumnType("integer")
                        .HasColumnName("process_status");

                    b.Property<string>("RawAlreadyApproved")
                        .HasColumnType("text")
                        .HasColumnName("raw_already_approved");

                    b.Property<string>("RawApprovers")
                        .HasColumnType("text")
                        .HasColumnName("raw_approvers");

                    b.Property<int>("RequiredApprovers")
                        .HasColumnType("integer")
                        .HasColumnName("required_approvers");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("pk_process_view");

                    b.ToTable((string)null);

                    b.ToView("processview");
                });

            modelBuilder.Entity("PublicWorkflow.Domain.Entities.Catalog.PublishOption", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_on");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_on");

                    b.Property<string>("PostObjectKeyNames")
                        .HasColumnType("text")
                        .HasColumnName("post_object_key_names");

                    b.Property<long?>("ProcessConfigId")
                        .HasColumnType("bigint")
                        .HasColumnName("process_config_id");

                    b.Property<int>("Publish")
                        .HasColumnType("integer")
                        .HasColumnName("publish");

                    b.Property<string>("Url_Topic")
                        .HasColumnType("text")
                        .HasColumnName("url_topic");

                    b.HasKey("Id")
                        .HasName("pk_publish_option");

                    b.HasIndex("ProcessConfigId")
                        .HasDatabaseName("ix_publish_option_process_config_id");

                    b.ToTable("publish_option", "application");
                });

            modelBuilder.Entity("PublicWorkflow.Domain.Entities.Catalog.Approval", b =>
                {
                    b.HasOne("PublicWorkflow.Domain.Entities.Catalog.ApprovalConfig", "ApprovalConfig")
                        .WithMany("Approvals")
                        .HasForeignKey("ApprovalconfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_approval_approval_config_approvalconfig_id");

                    b.HasOne("PublicWorkflow.Domain.Entities.Catalog.Process", "Process")
                        .WithMany("Actions")
                        .HasForeignKey("ProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_approval_process_process_id");

                    b.Navigation("ApprovalConfig");

                    b.Navigation("Process");
                });

            modelBuilder.Entity("PublicWorkflow.Domain.Entities.Catalog.ApprovalConfig", b =>
                {
                    b.HasOne("PublicWorkflow.Domain.Entities.Catalog.ProcessConfig", "ProcessConfig")
                        .WithMany("ApprovalConfigs")
                        .HasForeignKey("ProcessConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_approval_config_process_config_process_config_id");

                    b.Navigation("ProcessConfig");
                });

            modelBuilder.Entity("PublicWorkflow.Domain.Entities.Catalog.ApprovalRule", b =>
                {
                    b.HasOne("PublicWorkflow.Domain.Entities.Catalog.ApprovalConfig", "ApprovalConfig")
                        .WithMany("Rules")
                        .HasForeignKey("ApprovalConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_approval_rule_approval_config_approval_config_id");

                    b.Navigation("ApprovalConfig");
                });

            modelBuilder.Entity("PublicWorkflow.Domain.Entities.Catalog.OrganizationUser", b =>
                {
                    b.HasOne("PublicWorkflow.Domain.Entities.Catalog.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .HasConstraintName("fk_organization_user_organization_organization_id");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("PublicWorkflow.Domain.Entities.Catalog.Process", b =>
                {
                    b.HasOne("PublicWorkflow.Domain.Entities.Catalog.ProcessConfig", "ProcessConfig")
                        .WithMany()
                        .HasForeignKey("ProcessConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_process_process_config_process_config_id");

                    b.Navigation("ProcessConfig");
                });

            modelBuilder.Entity("PublicWorkflow.Domain.Entities.Catalog.ProcessConfig", b =>
                {
                    b.HasOne("PublicWorkflow.Domain.Entities.Catalog.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .HasConstraintName("fk_process_config_organization_organization_id");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("PublicWorkflow.Domain.Entities.Catalog.ProcessRequirement", b =>
                {
                    b.HasOne("PublicWorkflow.Domain.Entities.Catalog.ProcessConfig", null)
                        .WithMany("Requirements")
                        .HasForeignKey("ProcessConfigId")
                        .HasConstraintName("fk_requirement_process_config_process_config_id");
                });

            modelBuilder.Entity("PublicWorkflow.Domain.Entities.Catalog.ProcessRule", b =>
                {
                    b.HasOne("PublicWorkflow.Domain.Entities.Catalog.ProcessConfig", "ProcessConfig")
                        .WithMany("Rules")
                        .HasForeignKey("ProcessConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_process_rule_process_config_process_config_id");

                    b.Navigation("ProcessConfig");
                });

            modelBuilder.Entity("PublicWorkflow.Domain.Entities.Catalog.PublishOption", b =>
                {
                    b.HasOne("PublicWorkflow.Domain.Entities.Catalog.ProcessConfig", null)
                        .WithMany("PublishConfigs")
                        .HasForeignKey("ProcessConfigId")
                        .HasConstraintName("fk_publish_option_process_config_process_config_id");
                });

            modelBuilder.Entity("PublicWorkflow.Domain.Entities.Catalog.ApprovalConfig", b =>
                {
                    b.Navigation("Approvals");

                    b.Navigation("Rules");
                });

            modelBuilder.Entity("PublicWorkflow.Domain.Entities.Catalog.Process", b =>
                {
                    b.Navigation("Actions");
                });

            modelBuilder.Entity("PublicWorkflow.Domain.Entities.Catalog.ProcessConfig", b =>
                {
                    b.Navigation("ApprovalConfigs");

                    b.Navigation("PublishConfigs");

                    b.Navigation("Requirements");

                    b.Navigation("Rules");
                });
#pragma warning restore 612, 618
        }
    }
}
